import argparse


def parse_args():    
    parser = argparse.ArgumentParser()
    parser.add_argument('-net', type=str, default='Vivim', help='net type')
    parser.add_argument('-exp_name', default='vivim_train_test', type=str, help='experiment name')
    parser.add_argument('-vis', type=bool, default=False, help='Generate visualisation during validation')
    parser.add_argument('-train_vis', type=bool, default=False, help='Generate visualisation during training')
    parser.add_argument('-pretrain', type=str, default=None, help='path of pretrain weights')
    parser.add_argument('-val_freq',type=int, default=5, help='interval between each validation')
    parser.add_argument('-gpu', type=bool, default=True, help='use gpu or not')
    parser.add_argument('-gpu_device', type=int, default=0, help='use which gpu')
    parser.add_argument('-image_size', type=int, default=256, help='image_size')
    parser.add_argument('-out_size', type=int, default=256, help='output_size')
    parser.add_argument('-distributed', default='none', type=str, help='multi GPU ids to use')
    parser.add_argument('-dataset', default='RawDataset' ,type=str, help='dataset name')
    parser.add_argument('-train_bs', type=int, default=1, help='batch size for trainloader')
    parser.add_argument('-initlr', type=float, default=1e-4, help='initial learning rate')
    parser.add_argument('-weights', type=str, default = 0, help='the weights file you want to test')
    parser.add_argument('-data_path', type=str, default=None, help='The path of segmentation data')
    parser.add_argument('-clip_length', type=int, default=3, help='clip length')
    parser.add_argument('-epochs', type=int, default=10, help='number of epochs')
    parser.add_argument('-resume_path', type=str, default=None, help='resume checkpoint path')
    parser.add_argument('-test_bs', type=int, default=1, help='test batch size')
    parser.add_argument('-val_bs', type=int, default=1, help='validation batch')
    parser.add_argument('-save_path', type=str, default='runs', help='saving path')
    parser.add_argument('-weight_decay', type=int, default=0.01)
    parser.add_argument('-crop_size', type=int, default=256)
    parser.add_argument('-num_workers', type=int, default=2)
    parser.add_argument('-shift_length', type=int, default=32)
    parser.add_argument('-val_aug', type=bool, default=False)
    parser.add_argument('-with_edge', type=bool, default=False)
    parser.add_argument('-num_classes', type=int, default=2)
    parser.add_argument('-num_folds', type=int, default=5, help='number of folds used')
    parser.add_argument('-seed', type=int, default=42)

    opt = parser.parse_args()

    return opt
